// ===========================================
// PRISMA CONFIGURATION (GENERAL)
// ===========================================

generator client {
    provider = "prisma-client-js"
    output   = "prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// ===========================================
// DOMAIN MODELS
// ===========================================

// User Domain Models
model User {
    id        String   @id @default(cuid())
    name      String   @db.VarChar(255)
    email     String   @unique @db.VarChar(255)
    password  String   @db.VarChar(255)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    deletedAt DateTime?

    // Relations
    courses Course[]
    refreshTokens RefreshToken[]

    @@map("users")
}

// Token Domain Models
model RefreshToken {
    id        String   @id @default(cuid())
    token     String   @unique @db.VarChar(500)
    expiresAt DateTime
    isRevoked Boolean  @default(false)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("refresh_tokens")
}

// Course Domain Models
model Course {
    id          String     @id @default(cuid())
    title       String     @db.VarChar(255)
    description String     @db.Text
    slug        String     @unique @db.VarChar(100)
    visibility  Visibility @default(PRIVATE)
    tags        String[]   @default([])
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    deletedAt   DateTime?

    // Relations
    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("courses")
}

// Course Domain Enums
enum Visibility {
    PUBLIC
    PRIVATE
}
